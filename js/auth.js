document.addEventListener("DOMContentLoaded", () => {
    let registerForm = document.getElementById("register-form");
    let loginForm = document.getElementById("login-form");

    if (registerForm) {
        registerForm.addEventListener("submit", (e) => {
            e.preventDefault();
            registerUser();
        });
    }

    if (loginForm) {
        loginForm.addEventListener("submit", (e) => {
            e.preventDefault();
            loginUser();
        });
    }
});

// ƒêƒÉng k√Ω ng∆∞·ªùi d√πng m·ªõi
function registerUser() {
    let name = document.getElementById("name").value;
    let email = document.getElementById("email").value;
    let password = document.getElementById("password").value;

    firebase.auth().createUserWithEmailAndPassword(email, password)
  .then((userCredential) => {
    var user = userCredential.user;
    console.log("User registered successfully:", user.uid);
    // L∆∞u th√¥ng tin ng∆∞·ªùi d√πng v√†o Firestore
    const db = firebase.firestore();
    db.collection("users").doc(user.uid).set({
      name: name,
      email: email,
      password: password,
      cart: []
    })
    .then(() => {
      console.log("User registered successfully!");
      alert("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p.");
      window.location.href = "login.html";
    })
    .catch((error) => {
      console.error("Error writing document: ", error);
    });
    // ...
  })
  .catch((error) => {
    var errorCode = error.code;
    var errorMessage = error.message;
    alert("‚ùå ƒêƒÉng k√Ω kh√¥ng th√†nh c√¥ng! Vui l√≤ng th·ª≠ l·∫°i.");
    console.error("Error registering user: ", error);
  });
}

// ƒêƒÉng nh·∫≠p ng∆∞·ªùi d√πng
function loginUser() {
    let email = document.getElementById("email").value;
    let password = document.getElementById("password").value;

    firebase.auth().signInWithEmailAndPassword(email, password)
  .then((userCredential) => {
    var user = userCredential.user;
    console.log("User logged in successfully:", user.uid);
    // L∆∞u th√¥ng tin ng∆∞·ªùi d√πng v√†o localStorage
    localStorage.setItem("currentUser", email);
    alert("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
    window.location.href = "index.html";
    // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ Firestore
    const db = firebase.firestore();
    db.collection("users").doc(user.uid).get()
    .then((doc) => {
      if (doc.exists) {
        const userData = doc.data();
        localStorage.setItem(email, JSON.stringify(userData));
        console.log("User data retrieved successfully:", userData);
      } else {
        console.log("No such document!");
      }
    })
    .catch((error) => {
      console.error("Error getting document:", error);
    });
  })
  .catch((error) => {
    var errorCode = error.code;
    var errorMessage = error.message;
    alert("‚ùå ƒêƒÉng nh·∫≠p kh√¥ng th√†nh c√¥ng! Vui l√≤ng th·ª≠ l·∫°i.");
    console.error("Error logging in user: ", error);
  });
}

// L·∫•y th√¥ng tin ng∆∞·ªùi d√πng hi·ªán t·∫°i
function getCurrentUser() {
    let email = localStorage.getItem("currentUser");
    return email ? JSON.parse(localStorage.getItem(email)) : null;
}

// C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
function updateUser(user) {
    localStorage.setItem(user.email, JSON.stringify(user));
}
