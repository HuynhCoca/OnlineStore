const form = document.querySelector("form");
form.addEventListener("submit", (e) => {
    e.preventDefault();
    const productId = document.getElementById("product-id").value;
    if (productId) {
        updateProduct(productId);
    } else {
        addProduct();
    }
});

function addProduct() {
    const title = document.getElementById("title").value;
    const price = document.getElementById("price").value;
    const description = document.getElementById("description").value;
    const image = document.getElementById("image").value;
    const category = document.getElementById("category").value;

    if (title && price && description && image && category) {
        addProductToFirestore(title, price, description, image, category);
    } else {
        alert("‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin s·∫£n ph·∫©m!");
    }
}

function addProductToFirestore(title, price, description, image, category) {
    const db = firebase.firestore();
    const productRef = db.collection("products").doc();

    productRef.set({
        title: title,
        price: price,
        description: description,
        image: image,
        category: category,
        quantity: 5 // M·∫∑c ƒë·ªãnh s·ªë l∆∞·ª£ng l√† 5 (ƒë·ªÉ c√≥ s·∫£n ph·∫©m hi·ªÉn th·ªã trong b·∫£ng)
    })
    .then(() => {
        console.log("Product added successfully!");
        alert("üéâ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
        window.location.href = "admin-page.html";
    })
    .catch((error) => {
        console.error("Error adding product: ", error);
        alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi th√™m s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
    });
}

function deleteProduct(productId) {
    if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?")) return;
    const db = firebase.firestore();
    const productRef = db.collection("products").doc(productId);

    productRef.delete()
        .then(() => {
            console.log("Product deleted successfully!");
            alert("üéâ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!");
            window.location.reload();
        })
        .catch((error) => {
            console.error("Error deleting product: ", error);
            alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi x√≥a s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
        });
}

function updateProduct(productId) {
    const title = document.getElementById("title").value;
    const price = document.getElementById("price").value;
    const description = document.getElementById("description").value;
    const image = document.getElementById("image").value;
    const category = document.getElementById("category").value;

    if (title && price && description && image && category) {
        updateProductInFirestore(productId, title, price, description, image, category);
    } else {
        alert("‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin s·∫£n ph·∫©m!");
    }
}

function updateProductInFirestore(productId, title, price, description, image, category) {
    const db = firebase.firestore();
    const productRef = db.collection("products").doc(productId);

    productRef.update({
        title: title,
        price: price,
        description: description,
        image: image,
        category: category
    })
    .then(() => {
        console.log("Product updated successfully!");
        alert("üéâ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!");
        window.location.reload();
    })
    .catch((error) => {
        console.error("Error updating product: ", error);
        alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
    });
}

// Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
function displayProducts() {
    const db = firebase.firestore();
    const productRef = db.collection("products");
    const productElement = document.getElementById("product-list");
    productElement.innerHTML = ""; // X√≥a s·∫£n ph·∫©m c≈© tr∆∞·ªõc khi hi·ªÉn th·ªã m·ªõi

    productRef.get()
        .then((querySnapshot) => {
            let count = 0;
            querySnapshot.forEach((doc) => {
                const product = doc.data();
                const productId = doc.id;
                // T·∫°o m·ªôt d√≤ng b·∫£ng cho m·ªói s·∫£n ph·∫©m
                let lowStockBadge = '';
                if (product.quantity <= 3) {
                    lowStockBadge = `<span class="badge bg-danger ms-2">S·∫Øp h·∫øt h√†ng</span>`;
                }

                const tr = document.createElement("tr");
                tr.innerHTML = `
                    <td>${product.title} ${lowStockBadge}</td>
                    <td>${product.price.toLocaleString()}$</td>
                    <td>${product.category}</td>
                    <td>
                        <img src="${product.image}" alt="${product.title}" style="max-width:80px;max-height:80px;object-fit:cover;border-radius:6px;">
                    </td>
                    <td>
                        <div class="d-flex flex-column">
                            <input type="number" min="0" value="${product.quantity ?? 10}" class="form-control form-control-sm quantity-input mb-2" data-id="${productId}">
                            <button class="btn btn-success btn-sm save-qty-btn w-100" data-id="${productId}">L∆∞u</button>
                        </div>
                    </td>
                    <td class="d-grid gap-2">
                        <button class="btn btn-danger btn-sm mb-1" onclick="deleteProduct('${productId}')">X√≥a</button>
                        <button class="btn btn-warning btn-sm mb-1" onclick="fillFormForUpdate('${productId}', '${product.title.replace(/'/g,"\\'")}', '${product.price}', '${product.description.replace(/'/g,"\\'")}', '${product.image}', '${product.category.replace(/'/g,"\\'")}')">S·ª≠a</button>
                    </td>
                `;
                productElement.appendChild(tr);
                count++;
            });
            if (count === 0) {
                productElement.innerHTML = `<tr><td colspan="5" class="text-center text-muted">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.</td></tr>`;
            }
        })
        .catch((error) => {
            console.error("Error getting products: ", error);
            alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m.");
        });
}

// H√†m ƒëi·ªÅn d·ªØ li·ªáu l√™n form ƒë·ªÉ s·ª≠a s·∫£n ph·∫©m
function fillFormForUpdate(id, title, price, description, image, category) {
    document.getElementById("edit-product-id").value = id;
    document.getElementById("edit-title").value = title;
    document.getElementById("edit-price").value = price;
    document.getElementById("edit-description").value = description;
    document.getElementById("edit-image").value = image;
    document.getElementById("edit-category").value = category;
    // Hi·ªán modal Bootstrap
    const modal = new bootstrap.Modal(document.getElementById('editProductModal'));
    modal.show();
}

// S·ª≠a l·∫°i h√†m updateProduct ƒë·ªÉ l·∫•y id t·ª´ hidden input
// function updateProductFromForm() {
//     const productId = document.getElementById("product-id").value;
//     if (!productId) {
//         alert("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m ƒë·ªÉ s·ª≠a!");
//         return;
//     }
//     updateProduct(productId);
// }

// G·ªçi h√†m hi·ªÉn th·ªã s·∫£n ph·∫©m khi trang admin load
document.addEventListener("DOMContentLoaded", displayProducts);

document.getElementById("edit-product-form").addEventListener("submit", function(e) {
    e.preventDefault();
    const id = document.getElementById("edit-product-id").value;
    const title = document.getElementById("edit-title").value;
    const price = parseFloat(document.getElementById("edit-price").value);
    const description = document.getElementById("edit-description").value;
    const image = document.getElementById("edit-image").value;
    const category = document.getElementById("edit-category").value;

    firebase.firestore().collection("products").doc(id).update({
        title, price, description, image, category
    }).then(() => {
        alert("‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m!");
        // ·∫®n modal
        bootstrap.Modal.getInstance(document.getElementById('editProductModal')).hide();
        displayProducts();
    }).catch((error) => {
        alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m!");
        console.error(error);
    });
});

// Sau khi render b·∫£ng, th√™m s·ª± ki·ªán cho n√∫t "L∆∞u" s·ªë l∆∞·ª£ng:
document.getElementById("product-list").addEventListener("click", function(e) {
    if (e.target.classList.contains("save-qty-btn")) {
        const productId = e.target.getAttribute("data-id");
        const quantityInput = document.querySelector(`.quantity-input[data-id="${productId}"]`);
        const newQuantity = parseInt(quantityInput.value, 10);

        if (isNaN(newQuantity) || newQuantity < 0) {
            alert("‚ùå S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá!");
            return;
        }

        firebase.firestore().collection("products").doc(productId).update({
            quantity: newQuantity
        }).then(() => {
            alert("‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m!");
        }).catch((error) => {
            alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m!");
            console.error(error);
        });
    }
});