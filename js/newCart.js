// Hi·ªán s·∫£n ph·∫©m trong cart c·ªßa ng∆∞·ªùi d√πng t·ª´ Firestore
document.addEventListener("DOMContentLoaded", () => {
        displayCartItems();
        document.getElementById("checkout-btn").addEventListener("click", () => {
            var result = confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒë·∫∑t h√†ng?");
            if (result) {
                handleCheckout();
            }
        });
});
function displayCartItems() {
    let user = getCurrentUser();
    if (!user) {
        alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem s·∫£n ph·∫©m!");
        window.location.href = "login.html";
        return;
    }
    const db = firebase.firestore();
    db.collection("users").doc(user.uid).collection("cart").get().then((querySnapshot) => {
        let cartTable = document.getElementById("cart-items");
        let totalPrice = 0;
        cartTable.innerHTML = "";
        if (querySnapshot.empty) {
            cartTable.innerHTML = `<tr><td colspan="5" class="text-center text-danger">üõí Gi·ªè h√†ng tr·ªëng!</td></tr>`;
            document.getElementById("total-price").textContent = "0.00";
            return;
        }
        querySnapshot.forEach((doc) => {
            const item = doc.data();
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${item.title}</td>
                <td>${item.price} $</td>
                <td>${item.quantity}</td>
                <td>${(item.price * item.quantity).toFixed(2)} $</td>
                <td>
                    <button class="btn btn-danger remove-item" data-id="${doc.id}">üóë X√≥a</button>
                    <button class="btn btn-warning edit-item" onclick="editCartItem('${doc.id}')">‚úèÔ∏è S·ª≠a</button>
                </td>
                
            `;
            cartTable.appendChild(row);
            totalPrice += item.price * item.quantity;
        });
        document.getElementById("total-price").textContent = totalPrice.toFixed(2);
        // Th√™m s·ª± ki·ªán x√≥a cho c√°c n√∫t x√≥a
        document.querySelectorAll(".remove-item").forEach(button => {
            button.addEventListener("click", (e) => {
                let productId = e.target.dataset.id;
                var result = confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?");
                if (result) {
                    removeFromCart(productId);
                }
            });
        });
    });    
}
function removeFromCart(productId) {
    let user = getCurrentUser();
    if (!user) {
        alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng!");
        return;
    }
    const db = firebase.firestore();
    db.collection("users").doc(user.uid).collection("cart").doc(productId).delete().then(() => {
        alert("‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng!");
        displayCartItems(); // C·∫≠p nh·∫≠t l·∫°i gi·ªè h√†ng
    }).catch((error) => {
        console.error("Error removing product from cart: ", error);
        alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
    });
}
// Theem s·ª± ki·ªán cho n√∫t thanh to√°n
function handleCheckout() {
    let user = getCurrentUser();
    if (!user) {
        alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ thanh to√°n!");
        return;
    }
    const db = firebase.firestore();
    db.collection("users").doc(user.uid).collection("cart").get().then((querySnapshot) => {
        if (querySnapshot.empty) {
            alert("üõí Gi·ªè h√†ng tr·ªëng! Vui l√≤ng th√™m s·∫£n ph·∫©m tr∆∞·ªõc khi thanh to√°n.");
            return;
        }
        // T·∫°o ƒë∆°n h√†ng m·ªõi
        const orderData = {
            userId: user.name,
            items: [],
            totalPrice: 0,
            createdAt: firebase.firestore.FieldValue.serverTimestamp(),
            status: "Ch·ªù x√°c nh·∫≠n"
        };
        querySnapshot.forEach((doc) => {
            const item = doc.data();
            orderData.items.push(item);
            orderData.totalPrice += item.price * item.quantity;
        });
        // L∆∞u ƒë∆°n h√†ng v√†o Firestore
        db.collection("orders").add(orderData).then(() => {
            // C·∫≠p nh·∫≠t l·∫°i kho h√†ng cho t·ª´ng s·∫£n ph·∫©m ƒë√£ mua
            const batch = db.batch();
            querySnapshot.forEach((doc) => {
                const item = doc.data();
                const productRef = db.collection("products").doc(doc.id);
                batch.update(productRef, {
                    quantity: firebase.firestore.FieldValue.increment(-item.quantity)
                });
            });
            batch.commit().then(() => {
                // X√≥a gi·ªè h√†ng sau khi thanh to√°n th√†nh c√¥ng
                querySnapshot.forEach((doc) => {
                    db.collection("users").doc(user.uid).collection("cart").doc(doc.id).delete();
                });
                alert("‚úÖ ƒê·∫∑t h√†ng th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ mua s·∫Øm.");
                displayCartItems();
            }).catch((error) => {
                alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t kho h√†ng.");
                console.error(error);
            });
        }).catch((error) => {
            console.error("Error creating order: ", error);
            alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi ƒë·∫∑t h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
        });
    });
}
// th√™m s·ª± ki·ªán cho n√∫t ch·ªânh s·ª≠a gi·ªè h√†ng
function editCartItem(productId) {
    let user = getCurrentUser();
    if (!user) {
        alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ ch·ªânh s·ª≠a gi·ªè h√†ng!");
        return;
    }
    const productRef = firebase.firestore().collection("products").doc(productId);
    const newQuantity = prompt("Nh·∫≠p s·ªë l∆∞·ª£ng m·ªõi cho s·∫£n ph·∫©m:");
    // Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ nh·∫≠p s·ªë l∆∞·ª£ng hay kh√¥ng
    productRef.get().then((doc) => {
        if (!doc.exists) {
            alert("S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i!");
            return;
        }
        const currentQty = doc.data().quantity ?? 0;
        if (newQuantity <= 0 || newQuantity > currentQty) {
            alert("‚ùå S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá ho·∫∑c v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng hi·ªán c√≥ trong kho!");
            return;
        }
        // Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ nh·∫≠p s·ªë l∆∞·ª£ng hay kh√¥ng
        if (newQuantity === null || newQuantity.trim() === "") {
            alert("‚ùå Vui l√≤ng nh·∫≠p s·ªë l∆∞·ª£ng h·ª£p l·ªá!");
            return;
        }
        // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng trong gi·ªè h√†ng
        const cartRef = firebase.firestore().collection("users").doc(user.uid).collection("cart").doc(productId);
        cartRef.update({
            quantity: parseInt(newQuantity)
        }).then(() => {
            alert("‚úÖ S·ªë l∆∞·ª£ng s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!");
            displayCartItems(); // C·∫≠p nh·∫≠t l·∫°i gi·ªè h√†ng
        }).catch((error) => {
            console.error("Error updating cart item: ", error);
            alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
        });
    }).catch((error) => {
        console.error("Error fetching product: ", error);
        alert("‚ùå ƒê√£ x·∫£y ra l·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
    });
}
